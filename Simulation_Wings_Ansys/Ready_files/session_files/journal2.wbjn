# encoding: utf-8
# 2022 R2
SetScriptVersion(Version="22.2.192")
system1 = GetSystem(Name="FFF")
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='(%py-exec "preferences.fixState()")')
setup1.SendCommand(Command="(%py-exec \"preferences.setState({r'Appearance': None,r'GPUApp': None,r'General': None,r'Graphics': None,r'MatProApp': None,r'MeshingWorkflow': None,r'Navigation': None,r'PrjApp': None,r'Simulation': None,r'TurboWorkflow': None,})\")")
setup1.SendCommand(Command='/file/set-tui-version "22.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton1(Scale)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Scale Mesh*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system1.Delete()
template1 = GetTemplate(
    TemplateName="Static Structural",
    Solver="ANSYS")
system2 = template1.CreateSystem()
template2 = GetTemplate(
    TemplateName="Modal",
    Solver="ANSYS")
system3 = template2.CreateSystem(
    Position="Right",
    RelativeTo=system2)
system3.Delete()
engineeringDataComponent1 = system2.GetComponent(Name="Engineering Data")
geometryComponent1 = system2.GetComponent(Name="Geometry")
modelComponent1 = system2.GetComponent(Name="Model")
system4 = template2.CreateSystem(
    ComponentsToShare=[engineeringDataComponent1, geometryComponent1, modelComponent1],
    Position="Right",
    RelativeTo=system2)
system4.Delete()
solutionComponent1 = system2.GetComponent(Name="Solution")
componentTemplate1 = GetComponentTemplate(Name="SimulationSetupCellTemplate_StructuralModalANSYS")
system5 = template2.CreateSystem(
    ComponentsToShare=[engineeringDataComponent1, geometryComponent1, modelComponent1],
    DataTransferFrom=[Set(FromComponent=solutionComponent1, TransferName=None, ToComponentTemplate=componentTemplate1)],
    Position="Right",
    RelativeTo=system2)
favorites1 = EngData.LoadFavoriteItems()
library1 = EngData.OpenLibrary(
    Name="General Materials",
    Source="General_Materials.xml")
engineeringData1 = system2.GetContainer(ComponentName="Engineering Data")
matl1 = engineeringData1.ImportMaterial(
    Name="Titanium Alloy",
    Source="General_Materials.xml")
geometry1 = system2.GetContainer(ComponentName="Geometry")
geometry1.SetFile(FilePath="H:/My Drive/Master's_Semister-I/Ansys(SES)/Assignments/Thesis/Modeling Solid Edge/Part_Aircraftwing.igs")
modelComponent1.Refresh()
model1 = system2.GetContainer(ComponentName="Model")
model1.Edit()
model1.Exit()
geometry1.SetFile(FilePath="H:/My Drive/Master's_Semister-I/Ansys(SES)/Assignments/Thesis/Modeling Solid Edge/Wings .igs")
modelComponent1.Refresh()
model1.Edit()
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
model1.Exit()
Save(Overwrite=True)
results1 = system2.GetContainer(ComponentName="Results")
results1.Edit()
model1.Exit()
Save(Overwrite=True)
