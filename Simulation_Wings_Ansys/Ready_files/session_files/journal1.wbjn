# encoding: utf-8
# 2022 R2
SetScriptVersion(Version="22.2.192")
template1 = GetTemplate(TemplateName="Fluid Flow with Fluent Meshing")
system1 = template1.CreateSystem()
geometry1 = system1.GetContainer(ComponentName="Geometry")
geometry1.Edit()
geometryComponent1 = system1.GetComponent(Name="Geometry")
geometryComponent1.Update(AllDependencies=True)
geometry1.Exit()
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}, RunParallel=True))
tGridData1 = GetDataEntity("/Mesh/TGridData:TGridData")
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=1))
mesh1 = system1.GetContainer(ComponentName="Mesh")
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1 = system1.GetComponent(Name="Mesh")
meshComponent1.Refresh()
setup1.SendCommand(Command="/file/set-tui-version \"22.2\"(cx-gui-do cx-activate-tab-index \"NavigationPane*Frame1(TreeTab)\" 0)(cx-gui-do cx-set-toggle-button2 \"Key Behavioral Changes*Table1*CheckButton2(Don't show this message again)\" #t)(cx-gui-do cx-activate-item \"Key Behavioral Changes*Table1*CheckButton2(Don't show this message again)\")(cx-gui-do cx-activate-item \"Key Behavioral Changes*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(%py-exec "preferences.General.KeyBehavioralChangesMessage.setState(False)")')
setup1.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.LengthUnit.setState(r'm')\")")
setup1.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.AreaUnit.setState(r'm^2')\")")
setup1.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.VolumeUnit.setState(r'm^3')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.755039 3.21044 2.0914) '(0 0 0) '(0.0498127 -0.107103 -0.161311) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Mesh)*PushButton1(  Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup1.SendCommand(Command="(cx-use-window-id 51)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Solution)*PushButton1(Switch to Solution)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Information*OK\")(cx-use-window-id 51)(cx-set-camera-relative '(-1.30844 0.399263 -4.61102) '(0 0 0) '(-0.132912 -0.977855 -0.0578777) 0 0)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(handle-key \"control [\")(cx-use-window-id 51)(handle-key \"control [\")(cx-use-window-id 51)(cx-gui-do cx-set-toggle-button2 \"Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Mouse Probe Function)*ButtonBox1*Box\" #t)(cx-gui-do cx-activate-item \"Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Mouse Probe Function)*ButtonBox1*Box\")(cx-use-window-id 51)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildToTask()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(2.28361 -1.51107 -0.901827) '(0 0 0) '(-0.00932908 0.0389477 -0.0116907) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0754102 0.118886 0.17752) '(0 0 0) '(0.0629898 0.0697111 -0.0736369) 0 0)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-0.216633 -0.160154 -0.328851) '(0 0 0) '(0.382007 -0.439278 0.114331) 0 0)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(1.19923 0.160923 1.46836) '(0 0 0) '(0.323067 0.0241656 -0.0175606) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.711241 -0.329041 -1.18133) '(0 0 0) '(-0.168424 -0.100841 0.0884542) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-1.58746 2.11293 2.95802) '(0 0 0) '(0.375803 0.690466 -0.299601) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.412611 0.0507579 -0.291796) '(0 0 0) '(0.0279646 -0.024883 0.0151058) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.381157 -0.129232 -0.504611) '(0 0 0) '(-0.0124419 -0.134113 0.0223973) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(2.77972 -1.70789 0.276611) '(0 0 0) '(-0.122044 -0.289644 0.0886782) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Enclose Fluid Regions (Capping)'].Arguments.setState({r'SelectionType': r'zone',})\")")
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Error*OK\")(cx-use-window-id 51)(cx-set-camera-relative '(0.290668 -0.230547 -1.6583) '(0 0 0) '(-0.233216 -0.159342 0.0824779) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Enclose Fluid Regions (Capping)'].Arguments.setState({r'CapLabels': [r'Dummy', r''],r'CreatePatchPreferences': {r'CAPIntersectionCheck': r'yes',r'MaxCapLimit': 5000,r'ShowCreatePatchPreferences': False,},r'ObjectAssociation': r'Add to Object',r'PatchName': r'velo-inlet_1',r'PatchObjectName': r'',r'PatchType': r'Single Surface',r'SelectionType': r'zone',r'ZoneType': r'velocity-inlet',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Enclose Fluid Regions (Capping)'].Execute()\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].ExecuteUpstreamNonExecutedAndThisTask()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.56057 1.37776 2.82144) '(0 0 0) '(0.468517 0.371734 -0.0826031) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-8.78668 -1.67755 -1.17439) '(0 0 0) '(-0.32237 0.546339 -0.165167) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(1.22333 -5.19068 0.277432) '(0 0 0) '(-0.274823 0.00311816 -0.0141119) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(6.15039 -1.67018 0.249966) '(0 0 0) '(0.0214868 -0.23126 -0.0257883) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(2.78412 6.42066 -0.260211) '(0 0 0) '(0 0 0) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-3.24465 2.84301 -1.39939) '(0 0 0) '(-0.074943 -0.296302 0.0570102) 0 0)(cx-use-window-id 51)(handle-key \"??\")(cx-use-window-id 51)(handle-key \"??\")(cx-use-window-id 51)(cx-set-camera-relative '(2.38603 -1.50238 0.615378) '(0 0 0) '(0.0365159 0.0880198 -0.029026) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.446012 -0.150137 -1.22427) '(0 0 0) '(-0.186169 -0.142862 0.0842425) 0 0)(cx-use-window-id 51)(handle-key \"??\")(cx-use-window-id 51)(handle-key \"??\")(cx-use-window-id 51)(cx-set-camera-relative '(-0.0451112 0.169502 0.165242) '(0 0 0) '(0.0452058 0.041871 -0.029301) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.2055 0.0982842 -0.157105) '(0 0 0) '(-0.0321084 -0.0399875 0.024372) 0 0)(cx-use-window-id 51)(handle-key \"??\")(cx-use-window-id 51)(handle-key \"??\")(cx-use-window-id 51)(cx-set-camera-relative '(-2.00849 1.08572 1.43258) '(0 0 0) '(0.122311 0.350828 -0.097578) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(1.6444 -0.611949 -1.04845) '(0 0 0) '(-0.0910929 -0.230247 0.0489473) 0 0)(cx-use-window-id 51)(handle-key \"??\")(cx-use-window-id 51)(handle-key \"??\")(cx-use-window-id 51)(cx-set-camera-relative '(-1.82311 0.606308 0.97729) '(0 0 0) '(0.0599303 0.195656 -0.0426139) 0 0)(cx-use-window-id 51)(handle-key \"??\")(cx-use-window-id 51)(handle-key \"??\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Revert()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Execute()\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Solution)*PushButton1(Switch to Solution)")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command="(newline)")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.27469 0.121656 -1.48618) '(0 0 0) '(-0.255266 -0.838771 -0.14206) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton1(Scale)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Scale Mesh*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Solid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton3(Change/Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton3(Change/Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton3(Change/Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton3(Change/Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table13*PushButton1( Default)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces\"))(cx-use-window-id 51)(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Surfaces*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Reports"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Reports"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Reports"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Reports"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reports*Table1*Table2*PushButton1(Set Up)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reports*Table1*Table2*PushButton1(Set Up)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='(%py-exec "preferences.fixState()")')
setup1.SendCommand(Command="(%py-exec \"preferences.setState({r'Appearance': None,r'GPUApp': None,r'General': None,r'Graphics': None,r'MatProApp': None,r'MeshingWorkflow': None,r'Navigation': None,r'PrjApp': None,r'Simulation': None,r'TurboWorkflow': None,})\")")
setup1.SendCommand(Command="/file/set-tui-version \"22.2\"(cx-use-window-id 51)(cx-set-camera-relative '(-0.509701 0.406731 -0.782052) '(0 0 0) '(-0.222022 -0.627302 -0.187255) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.392926 -0.00200081 -0.0923105) '(0 0 0) '(0.178077 -0.235175 -0.137365) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(1.371 -0.341008 -0.386513) '(0 0 0) '(0.0477564 0.152716 -0.0436009) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Materials\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton3(Change/Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Materials*Table1*List1(Materials)\" '( 3))(cx-gui-do cx-activate-item \"Materials*Table1*List1(Materials)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Materials*Table1*ButtonBox2*PushButton1(Create/Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton4(Delete)")(cx-gui-do cx-activate-item "Error*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton4(Delete)")(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table13*PushButton1( Default)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "Report Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces\"))(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Surfaces*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(solid:1) (cx-active-window))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list ))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Graphics\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Simulation Reports"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Simulation Reports"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Simulation Reports"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Simulation Reports|Report Outline"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Simulation Reports|Report Outline"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Simulation Reports|Report Outline"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Simulation Reports|Report Outline"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Simulation Reports|Report Outline"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Simulation Reports|Report Outline"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Quick Edit*Table1*PushButton4(icon_close)")')
Save(Overwrite=True)
